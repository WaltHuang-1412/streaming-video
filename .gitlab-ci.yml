stages:
  - build
  - deploy

.job_build_template:  
  stage: build
  image:
    # An alpine-based image with the `docker` CLI installed.
    name: docker:stable
  services:
   - name: docker:dind
     alias: thedockerhost
  variables:
    # Tell docker CLI how to talk to Docker daemon; see
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
    DOCKER_HOST: tcp://thedockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - set -x
    - docker build -t rexliu1127/pigeon-racing-web:$CI_ENVIRONMENT_NAME .
    - docker login -u $DOCKER_ID -p $DOCKER_PW
    - docker push rexliu1127/pigeon-racing-web:$CI_ENVIRONMENT_NAME            
    - docker image prune -f --filter label=stage=builder

.job_deploy_template:
  image: docker:stable
  stage: deploy
  services:
    - docker:dind
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)
    ##
    ## Give the right permissions, otherwise ssh-add will refuse to add files
    ## Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
    ##
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - set -x
    - ssh -oStrictHostKeyChecking=no $HOST_NAME "sudo docker login -u $DOCKER_ID -p $DOCKER_PW"
    - ssh -oStrictHostKeyChecking=no $HOST_NAME "sudo docker pull rexliu1127/pigeon-racing-web:$CI_ENVIRONMENT_NAME"
    - ssh -oStrictHostKeyChecking=no $HOST_NAME "sudo docker stop $CONTAINER_NAME-$CI_ENVIRONMENT_NAME"
    - ssh -oStrictHostKeyChecking=no $HOST_NAME "sudo docker rm $CONTAINER_NAME-$CI_ENVIRONMENT_NAME"
    - ssh -oStrictHostKeyChecking=no $HOST_NAME "sudo docker run -d --restart unless-stopped --name $CONTAINER_NAME-$CI_ENVIRONMENT_NAME -p 3000:80 rexliu1127/pigeon-racing-web:$CI_ENVIRONMENT_NAME"

dev_build:
  extends: .job_build_template
  stage: build
  environment:
    name: dev
  only:
    - develop
  tags:
    - docker

dev_deploy:
  extends: .job_deploy_template
  stage: deploy
  environment:
    name: dev
  only:
    - develop
  tags:
    - docker

# sit_build:
#   extends: .job_build_template
#   stage: build
#   environment:
#     name: sit
#   only:
#     - /^Verify_v.*$/
#     - /^RC_v.*$/
#   tags:
#     - apollo-shell

# sit_deploy:
#   extends: .job_deploy_template
#   stage: deploy
#   environment:
#     name: sit
#   only:
#     - /^Verify_v.*$/
#     - /^RC_v.*$/
#   tags:
#     - apollo-shell
